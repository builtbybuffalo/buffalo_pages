<div class="row js-nested-form-container" <%= "data-limit=#{f.object.config.dig(:limit)}" if f.object.config.dig(:limit).present? %>>
	<div class="col-md-12">
		<%= f.label f.object.variable_name %>
	</div>

	<div class="col-md-12">
		<ul class="js-sortable field nested_wrapper js-repeater js-nested-form-parent">
			<%= f.nested_fields_for :repeater_groups, wrapper_tag: :li, wrapper_options: { class: "js-repeater-item row field js-nested-form-element" } do |rg| %>
				<%= rg.hidden_field :position, class: "js-position" %>
				<div class="col-md-10 col-md-offset-1">
					<div class="well row">
						<div class="col-md-1">
							<span class="js-handle handle-icon icon handle glyphicon glyphicon-resize-vertical"></span>
							<%= rg.remove_nested_fields_link "X", class: "btn btn-danger btn-xs delete" %>
						</div>

						<% rg.object.repeater = f.object %>

						<div class="col-xs-11">
							<% config = (rg.object.repeater.field_blueprint&.config || f.object.config) %>
							<% config[:repeaters].each do |field_config| %>
								<% field = rg.object.fields.detect { |field| field.variable_name == field_config[:variable_name] } %>
								<% field ||= field_config[:type].constantize.new(field_config) %>

								<%= rg.fields_for :fields, field do |ff| %>
									<%= ff.hidden_field :type, value: field.type %>
									<%= ff.hidden_field :variable_name, value: field.variable_name %>
									<%# We need to copy over the json_config so we know how we fields need to be displayed %>
									<%= ff.hidden_field(:json_config, value: field_config[:json_config].to_json) unless field_config[:json_config].blank? %>

									<%= render "admin/content/fields/#{field.class.simple_type}", f: ff %>
								<% end %>
							<% end %>
						</div>
					</div>
				</div>
			<% end %>
		</ul>
	</div>

	<div class="col-md-12">
		<div class="form-group">
			<%= f.add_nested_fields_link :repeater_groups, "Add #{f.object.variable_name.humanize} repeater", class: "btn btn-info top-buffer" %>
		</div>
	</div>
</div>

